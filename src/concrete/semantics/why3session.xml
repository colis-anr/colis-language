<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="CVC4" version="1.6" timelimit="0" steplimit="0" memlimit="0"/>
<prover id="4" name="Z3" version="4.8.7" timelimit="0" steplimit="0" memlimit="0"/>
<prover id="5" name="Alt-Ergo" version="2.3.0" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="semantics.mlw"/>
<theory name="Behaviour" proved="true">
 <goal name="eq_behaviour&#39;vc" expl="VC for eq_behaviour" proved="true">
 <proof prover="1"><result status="valid" time="0.02" steps="2975"/></proof>
 </goal>
</theory>
<theory name="Buffers" proved="true">
 <goal name="Stdout.to_string&#39;vc" expl="VC for to_string" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="to_string&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="13556"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Stdout.concat&#39;vc" expl="VC for concat" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="concat&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="13656"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Stdout.concat_empty_left&#39;vc" expl="VC for concat_empty_left" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="concat_empty_left&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="58"/></proof>
  </goal>
  <goal name="concat_empty_left&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="5" timelimit="5"><result status="valid" time="6.00" steps="6038"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Stdout.concat_empty_right&#39;vc" expl="VC for concat_empty_right" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="concat_empty_right&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="13913"/></proof>
  </goal>
  <goal name="concat_empty_right&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="14353"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Stdout.concat_aux&#39;vc" expl="VC for concat_aux" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="concat_aux&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="13952"/></proof>
  </goal>
  <goal name="concat_aux&#39;vc.1" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="concat_aux&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="45589"/></proof>
   </goal>
   <goal name="concat_aux&#39;vc.1.1" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.02" steps="42581"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Stdout.concat_assoc&#39;vc" expl="VC for concat_assoc" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="concat_assoc&#39;vc.0" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="10779"/></proof>
  </goal>
  <goal name="concat_assoc&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="58"/></proof>
  </goal>
  <goal name="concat_assoc&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="concat_assoc&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.01" steps="61"/></proof>
   </goal>
   <goal name="concat_assoc&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="4" timelimit="5" memlimit="1000"><result status="valid" time="0.03" steps="55763"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Config" proved="true">
 <goal name="get_finite&#39;vc" expl="VC for get_finite" proved="true">
 <proof prover="1" timelimit="1" memlimit="1000"><result status="valid" time="0.02" steps="1872"/></proof>
 </goal>
 <goal name="config&#39;vc" expl="VC for config" proved="true">
 <proof prover="1"><result status="valid" time="0.02" steps="1792"/></proof>
 </goal>
</theory>
<theory name="Arguments" proved="true">
 <goal name="nth_argument&#39;vc" expl="VC for nth_argument" proved="true">
 <proof prover="1"><result status="valid" time="0.03" steps="9822"/></proof>
 </goal>
 <goal name="shift_arguments&#39;vc" expl="VC for shift_arguments" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="shift_arguments&#39;vc.0" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="shift_arguments&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="1"><result status="valid" time="0.03" steps="8689"/></proof>
   </goal>
   <goal name="shift_arguments&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="5" timelimit="0" memlimit="0"><result status="valid" time="0.00" steps="16"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="shift_arguments&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="8023"/></proof>
  </goal>
  <goal name="shift_arguments&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="shift_arguments&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="shift_arguments&#39;vc.2.0.0" expl="postcondition" proved="true">
    <proof prover="5" timelimit="0" memlimit="0"><result status="valid" time="0.00" steps="16"/></proof>
    </goal>
    <goal name="shift_arguments&#39;vc.2.0.1" expl="postcondition" proved="true">
    <proof prover="5" timelimit="0" memlimit="0"><result status="valid" time="0.00" steps="16"/></proof>
    </goal>
    <goal name="shift_arguments&#39;vc.2.0.2" expl="postcondition" proved="true">
    <proof prover="5" timelimit="0" memlimit="0"><result status="valid" time="0.00" steps="18"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="shift_arguments&#39;vc.2.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="shift_arguments&#39;vc.2.1.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.05" steps="9185"/></proof>
    </goal>
    <goal name="shift_arguments&#39;vc.2.1.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.03" steps="7792"/></proof>
    </goal>
    <goal name="shift_arguments&#39;vc.2.1.2" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.03" steps="9578"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="shift_arguments_0" proved="true">
 <proof prover="5" timelimit="0" memlimit="0"><result status="valid" time="0.00" steps="8"/></proof>
 </goal>
 <goal name="shift_arguments_cons_some" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="shift_arguments_cons_some.0" proved="true">
  <proof prover="5" timelimit="0" memlimit="0"><result status="valid" time="0.01" steps="234"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="shift_arguments_cons_none" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="shift_arguments_cons_none.0" proved="true">
  <proof prover="5" timelimit="0" memlimit="0"><result status="valid" time="0.01" steps="136"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Semantics" proved="true">
 <goal name="add_var_bindings&#39;vc" expl="VC for add_var_bindings" proved="true">
 <proof prover="5"><result status="valid" time="0.02" steps="83"/></proof>
 </goal>
 <goal name="same_context" proved="true">
 <proof prover="5"><result status="valid" time="0.03" steps="28"/></proof>
 </goal>
 <goal name="no_while_failure&#39;vc" expl="VC for no_while_failure" proved="true">
 <proof prover="5" timelimit="10"><result status="valid" time="1.02" steps="491"/></proof>
 </goal>
 <goal name="interp_function_definitions&#39;vc" expl="VC for interp_function_definitions" proved="true">
 <proof prover="5"><result status="valid" time="0.12" steps="139"/></proof>
 </goal>
 <goal name="eval_foreach_nil" proved="true">
 <proof prover="5"><result status="valid" time="0.21" steps="143"/></proof>
 </goal>
 <goal name="eval_foreach_concat&#39;vc" expl="VC for eval_foreach_concat" proved="true">
 <proof prover="5" timelimit="10"><result status="valid" time="2.27" steps="970"/></proof>
 </goal>
 <goal name="eval_foreach_last&#39;vc" expl="VC for eval_foreach_last" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="eval_foreach_last&#39;vc.0" expl="postcondition" proved="true">
  <transf name="inversion_arg_pr" proved="true" arg1="H1">
   <goal name="eval_foreach_last&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.90" steps="719"/></proof>
   </goal>
   <goal name="eval_foreach_last&#39;vc.0.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.06" steps="26"/></proof>
   </goal>
   <goal name="eval_foreach_last&#39;vc.0.2" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.23" steps="44"/></proof>
   </goal>
  </transf>
  <transf name="split_vc" proved="true" >
   <goal name="eval_foreach_last&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="5" timelimit="10" memlimit="4000"><result status="valid" time="9.81" steps="4509"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="eval_foreach_last&#39;vc.1" expl="postcondition" proved="true">
  <transf name="inversion_arg_pr" proved="true" arg1="H1">
   <goal name="eval_foreach_last&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.16" steps="39"/></proof>
   </goal>
   <goal name="eval_foreach_last&#39;vc.1.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.19" steps="26"/></proof>
   </goal>
   <goal name="eval_foreach_last&#39;vc.1.2" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.27" steps="115"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
