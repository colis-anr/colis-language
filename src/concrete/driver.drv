module semantics.Env
  syntax type env "%1 Env.env"
  syntax function empty_env "Env.empty %1"
  syntax function ([]) "Env.get %1 %2"
  syntax function ([<-]) "Env.set %1 %2 %3"
end

module semantics.FilterVarEnv
  prelude "
    let filter_var_env env =
      let open Semantics__Context in
      env |>
      Env.filter (fun _ v -> v.exported && v.value <> None) |>
      Env.map (function {value=Some s; _} -> s | _ -> assert false) \"\"
  "
  syntax function filter_var_env "Semantics__FilterVarEnv.filter_var_env %1"
end

module interpreter.Interpreter
  syntax function S.interp_utility "Utilities.interp_utility %1 %2 %3 %4"
end