prelude "module IdEnv = Map.Make (String)"

module semantics.Env
  syntax type env "%1 IdEnv.t * %1"
  syntax function empty_env "IdEnv.empty, %1"
  syntax function ([]) "(try IdEnv.find %2 (fst %1) with Not_found -> snd %1)"
  syntax function ([<-]) "(IdEnv.add %2 %3 (fst %1), snd %1)"
end

module semantics.Semantics
  syntax function interp_utility "Utilities.interp_utility %1 %2 %3"
end