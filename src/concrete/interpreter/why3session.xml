<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="5">
<prover id="0" name="Z3" version="4.6.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.2.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<file proved="true">
<path name=".."/>
<path name="interpreter.mlw"/>
<theory name="Interpreter" proved="true">
 <goal name="VC context" expl="VC for context" proved="true">
 <proof prover="2"><result status="valid" time="0.12"/></proof>
 </goal>
 <goal name="context_same" proved="true">
 <proof prover="2"><result status="valid" time="0.25"/></proof>
 </goal>
 <goal name="state_same" proved="true">
 <proof prover="2"><result status="valid" time="0.29"/></proof>
 </goal>
 <goal name="VC maybe_exit" expl="VC for maybe_exit" proved="true">
 <proof prover="2"><result status="valid" time="0.30"/></proof>
 </goal>
 <goal name="VC interp_utility" expl="VC for interp_utility" proved="true">
 <proof prover="2"><result status="valid" time="0.30"/></proof>
 </goal>
 <goal name="VC shift_arguments" expl="VC for shift_arguments" proved="true">
 <proof prover="2"><result status="valid" time="0.37"/></proof>
 </goal>
 <goal name="VC interp_instruction" expl="VC for interp_instruction" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC interp_instruction.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="VC interp_instruction.1" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.28"/></proof>
  </goal>
  <goal name="VC interp_instruction.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.27"/></proof>
  </goal>
  <goal name="VC interp_instruction.3" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.38"/></proof>
  </goal>
  <goal name="VC interp_instruction.4" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="VC interp_instruction.5" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.37"/></proof>
  </goal>
  <goal name="VC interp_instruction.6" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.26"/></proof>
  </goal>
  <goal name="VC interp_instruction.7" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.26"/></proof>
  </goal>
  <goal name="VC interp_instruction.8" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.21"/></proof>
  </goal>
  <goal name="VC interp_instruction.9" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.31"/></proof>
  </goal>
  <goal name="VC interp_instruction.10" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="VC interp_instruction.11" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.37"/></proof>
  </goal>
  <goal name="VC interp_instruction.12" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="VC interp_instruction.13" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.26"/></proof>
  </goal>
  <goal name="VC interp_instruction.14" expl="postcondition" proved="true">
  <transf name="subst_all" proved="true" >
   <goal name="VC interp_instruction.14.0" expl="postcondition" proved="true">
   <transf name="case" proved="true" arg1="sta.result.contents">
    <goal name="VC interp_instruction.14.0.0" expl="true case (postcondition)" proved="true">
    <transf name="apply" proved="true" arg1="eval_shift" arg2="with" arg3="sta.arguments.contents">
     <goal name="VC interp_instruction.14.0.0.0" expl="apply premises" proved="true">
     <proof prover="2"><result status="valid" time="0.28"/></proof>
     </goal>
     <goal name="VC interp_instruction.14.0.0.1" expl="apply premises" proved="true">
     <proof prover="2"><result status="valid" time="0.28"/></proof>
     </goal>
     <goal name="VC interp_instruction.14.0.0.2" expl="apply premises" proved="true">
     <proof prover="2"><result status="valid" time="0.43"/></proof>
     </goal>
     <goal name="VC interp_instruction.14.0.0.3" expl="apply premises" proved="true">
     <proof prover="2"><result status="valid" time="0.18"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC interp_instruction.14.0.1" expl="false case (postcondition)" proved="true">
    <proof prover="2"><result status="valid" time="0.42"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC interp_instruction.15" expl="exceptional postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.21" steps="223"/></proof>
  </goal>
  <goal name="VC interp_instruction.16" expl="postcondition" proved="true">
  <transf name="subst_all" proved="true" >
   <goal name="VC interp_instruction.16.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="eval_assignment" arg2="with" arg3="str,sta.result.contents">
    <goal name="VC interp_instruction.16.0.0" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.24"/></proof>
    </goal>
    <goal name="VC interp_instruction.16.0.1" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.53"/></proof>
    </goal>
    <goal name="VC interp_instruction.16.0.2" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.10"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC interp_instruction.17" expl="exceptional postcondition" proved="true">
  <transf name="subst_all" proved="true" >
   <goal name="VC interp_instruction.17.0" expl="exceptional postcondition" proved="true">
   <transf name="apply" proved="true" arg1="eval_assignment" arg2="with" arg3="str,sta.result.contents">
    <goal name="VC interp_instruction.17.0.0" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.34"/></proof>
    </goal>
    <goal name="VC interp_instruction.17.0.1" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.44"/></proof>
    </goal>
    <goal name="VC interp_instruction.17.0.2" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.17"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC interp_instruction.18" expl="exceptional postcondition" proved="true">
  <transf name="subst_all" proved="true" >
   <goal name="VC interp_instruction.18.0" expl="exceptional postcondition" proved="true">
   <transf name="apply" proved="true" arg1="eval_assignment_failure">
    <goal name="VC interp_instruction.18.0.0" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.10"/></proof>
    </goal>
    <goal name="VC interp_instruction.18.0.1" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.23"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC interp_instruction.19" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="VC interp_instruction.20" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.21"/></proof>
  </goal>
  <goal name="VC interp_instruction.21" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.30"/></proof>
  </goal>
  <goal name="VC interp_instruction.22" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="VC interp_instruction.23" expl="exceptional postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.19" steps="16"/></proof>
  </goal>
  <goal name="VC interp_instruction.24" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="VC interp_instruction.25" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC interp_instruction.26" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.44"/></proof>
  </goal>
  <goal name="VC interp_instruction.27" expl="exceptional postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="80"/></proof>
  </goal>
  <goal name="VC interp_instruction.28" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.39"/></proof>
  </goal>
  <goal name="VC interp_instruction.29" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.31"/></proof>
  </goal>
  <goal name="VC interp_instruction.30" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.46"/></proof>
  </goal>
  <goal name="VC interp_instruction.31" expl="exceptional postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.29" steps="80"/></proof>
  <proof prover="2"><result status="valid" time="0.36"/></proof>
  </goal>
  <goal name="VC interp_instruction.32" expl="exceptional postcondition" proved="true">
  <transf name="subst_all" proved="true" >
   <goal name="VC interp_instruction.32.0" expl="exceptional postcondition" proved="true">
   <transf name="apply" proved="true" arg1="eval_subshell_failure" arg2="with" arg3="sta&#39;.context">
    <goal name="VC interp_instruction.32.0.0" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.22"/></proof>
    </goal>
    <goal name="VC interp_instruction.32.0.1" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.27"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC interp_instruction.33" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.29"/></proof>
  </goal>
  <goal name="VC interp_instruction.34" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.31"/></proof>
  </goal>
  <goal name="VC interp_instruction.35" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.35"/></proof>
  </goal>
  <goal name="VC interp_instruction.36" expl="exceptional postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="16"/></proof>
  </goal>
  <goal name="VC interp_instruction.37" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.30"/></proof>
  </goal>
  <goal name="VC interp_instruction.38" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.31"/></proof>
  </goal>
  <goal name="VC interp_instruction.39" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="VC interp_instruction.40" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.28"/></proof>
  </goal>
  <goal name="VC interp_instruction.41" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="VC interp_instruction.42" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC interp_instruction.43" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="VC interp_instruction.44" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.37"/></proof>
  </goal>
  <goal name="VC interp_instruction.45" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="VC interp_instruction.46" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="VC interp_instruction.47" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="VC interp_instruction.48" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="VC interp_instruction.49" expl="exceptional postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="18"/></proof>
  </goal>
  <goal name="VC interp_instruction.50" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.41"/></proof>
  </goal>
  <goal name="VC interp_instruction.51" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.39"/></proof>
  </goal>
  <goal name="VC interp_instruction.52" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.43"/></proof>
  </goal>
  <goal name="VC interp_instruction.53" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.51"/></proof>
  </goal>
  <goal name="VC interp_instruction.54" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.59"/></proof>
  </goal>
  <goal name="VC interp_instruction.55" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.57"/></proof>
  </goal>
  <goal name="VC interp_instruction.56" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.52"/></proof>
  </goal>
  <goal name="VC interp_instruction.57" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.61"/></proof>
  </goal>
  <goal name="VC interp_instruction.58" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.57"/></proof>
  </goal>
  <goal name="VC interp_instruction.59" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC interp_instruction.60" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.49"/></proof>
  </goal>
  <goal name="VC interp_instruction.61" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.59"/></proof>
  </goal>
  <goal name="VC interp_instruction.62" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.59"/></proof>
  </goal>
  <goal name="VC interp_instruction.63" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.58"/></proof>
  </goal>
  <goal name="VC interp_instruction.64" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.28"/></proof>
  </goal>
  <goal name="VC interp_instruction.65" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="VC interp_instruction.66" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.42"/></proof>
  </goal>
  <goal name="VC interp_instruction.67" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="VC interp_instruction.68" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.47"/></proof>
  </goal>
  <goal name="VC interp_instruction.69" expl="exceptional postcondition" proved="true">
  <transf name="subst" proved="true" arg1="ins">
   <goal name="VC interp_instruction.69.0" expl="exceptional postcondition" proved="true">
   <transf name="apply" proved="true" arg1="eval_call_function" arg2="with" arg3="(context sta&#39;),(state sta1),args,x,BExit">
    <goal name="VC interp_instruction.69.0.0" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.22"/></proof>
    </goal>
    <goal name="VC interp_instruction.69.0.1" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.11"/></proof>
    </goal>
    <goal name="VC interp_instruction.69.0.2" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.19"/></proof>
    </goal>
    <goal name="VC interp_instruction.69.0.3" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.26"/></proof>
    </goal>
    <goal name="VC interp_instruction.69.0.4" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.13"/></proof>
    </goal>
    <goal name="VC interp_instruction.69.0.5" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.28"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC interp_instruction.70" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.59"/></proof>
  </goal>
  <goal name="VC interp_instruction.71" expl="exceptional postcondition" proved="true">
  <transf name="subst" proved="true" arg1="ins">
   <goal name="VC interp_instruction.71.0" expl="exceptional postcondition" proved="true">
   <transf name="apply" proved="true" arg1="eval_call_function_failure" arg2="with" arg3="(context sta&#39;),(state sta1),args,x">
    <goal name="VC interp_instruction.71.0.0" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.13"/></proof>
    </goal>
    <goal name="VC interp_instruction.71.0.1" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.22"/></proof>
    </goal>
    <goal name="VC interp_instruction.71.0.2" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.40"/></proof>
    </goal>
    <goal name="VC interp_instruction.71.0.3" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.46"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC interp_instruction.72" expl="postcondition" proved="true">
  <proof prover="1" timelimit="20" memlimit="2500"><result status="valid" time="0.58" steps="360"/></proof>
  </goal>
  <goal name="VC interp_instruction.73" expl="exceptional postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.50" steps="350"/></proof>
  </goal>
  <goal name="VC interp_instruction.74" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="VC interp_instruction.75" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="VC interp_instruction.76" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.32"/></proof>
  </goal>
  <goal name="VC interp_instruction.77" expl="loop invariant preservation" proved="true">
  <transf name="assert" proved="true" arg1="(eval_foreach1 True (cnf, inp, ctx0, sta0) x3 (take i ss ++ Cons (nth i ss) Nil) x1 (state sta, context sta, BNormal) last_result)">
   <goal name="VC interp_instruction.77.0" expl="asserted formula" proved="true">
   <transf name="apply" proved="true" arg1="eval_foreach_last" arg2="with" arg3="last_result1,(context sta2),(state sta2)">
    <goal name="VC interp_instruction.77.0.0" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.11"/></proof>
    </goal>
    <goal name="VC interp_instruction.77.0.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC interp_instruction.77.0.1.0" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="(ctx1&#39;=context sta1)">
      <goal name="VC interp_instruction.77.0.1.0.0" expl="asserted formula" proved="true">
      <proof prover="2"><result status="valid" time="1.10"/></proof>
      </goal>
      <goal name="VC interp_instruction.77.0.1.0.1" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="0.38"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC interp_instruction.77.0.2" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.20"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC interp_instruction.77.1" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.61"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC interp_instruction.78" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.32"/></proof>
  </goal>
  <goal name="VC interp_instruction.79" expl="exceptional postcondition" proved="true">
  <transf name="subst_all" proved="true" >
   <goal name="VC interp_instruction.79.0" expl="exceptional postcondition" proved="true">
   <transf name="apply" proved="true" arg1="eval_foreach" arg2="with" arg3="(context sta),(state sta3),ss,(contents (result sta))">
    <goal name="VC interp_instruction.79.0.0" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.12"/></proof>
    </goal>
    <goal name="VC interp_instruction.79.0.1" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="ss" arg2="(take i ss ++ Cons (nth i ss) (drop (i+1) ss))">
     <goal name="VC interp_instruction.79.0.1.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="eval_foreach_concat" arg2="with" arg3="last_result,(context sta2),(state sta2)">
      <goal name="VC interp_instruction.79.0.1.0.0" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="0.21"/></proof>
      </goal>
      <goal name="VC interp_instruction.79.0.1.0.1" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="eval_foreach_abort" arg2="with" arg3="(nth i ss),(drop (i + 1) ss)">
       <goal name="VC interp_instruction.79.0.1.0.1.0" expl="apply premises" proved="true">
       <transf name="assert" proved="true" arg1="(sta2.context.var_env1[x3 &lt;- nth i ss]&#39;=sta1.var_env.contents)">
        <goal name="VC interp_instruction.79.0.1.0.1.0.0" expl="asserted formula" proved="true">
        <proof prover="2"><result status="valid" time="0.23"/></proof>
        </goal>
        <goal name="VC interp_instruction.79.0.1.0.1.0.1" expl="apply premises" proved="true">
        <proof prover="2"><result status="valid" time="0.26"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC interp_instruction.79.0.1.0.1.1" expl="apply premises" proved="true">
       <proof prover="2"><result status="valid" time="0.14"/></proof>
       </goal>
       <goal name="VC interp_instruction.79.0.1.0.1.2" expl="apply premises" proved="true">
       <proof prover="2"><result status="valid" time="0.19"/></proof>
       </goal>
       <goal name="VC interp_instruction.79.0.1.0.1.3" expl="apply premises" proved="true">
       <proof prover="2"><result status="valid" time="0.26"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC interp_instruction.79.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="2"><result status="valid" time="0.36"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC interp_instruction.79.0.2" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.31"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC interp_instruction.80" expl="exceptional postcondition" proved="true">
  <transf name="subst_all" proved="true" >
   <goal name="VC interp_instruction.80.0" expl="exceptional postcondition" proved="true">
   <transf name="apply" proved="true" arg1="eval_foreach" arg2="with" arg3="(context sta),(state sta3),ss,(contents (result sta))">
    <goal name="VC interp_instruction.80.0.0" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.12"/></proof>
    </goal>
    <goal name="VC interp_instruction.80.0.1" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="ss" arg2="(take i ss ++ Cons (nth i ss) (drop (i+1) ss))">
     <goal name="VC interp_instruction.80.0.1.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="eval_foreach_concat" arg2="with" arg3="last_result,(context sta2),(state sta2)">
      <goal name="VC interp_instruction.80.0.1.0.0" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="0.23"/></proof>
      </goal>
      <goal name="VC interp_instruction.80.0.1.0.1" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="eval_foreach_abort" arg2="with" arg3="(nth i ss),(drop (i + 1) ss)">
       <goal name="VC interp_instruction.80.0.1.0.1.0" expl="apply premises" proved="true">
       <transf name="assert" proved="true" arg1="(sta2.context.var_env1[x3 &lt;- nth i ss]&#39;=sta1.var_env.contents)">
        <goal name="VC interp_instruction.80.0.1.0.1.0.0" expl="asserted formula" proved="true">
        <proof prover="2"><result status="valid" time="0.21"/></proof>
        </goal>
        <goal name="VC interp_instruction.80.0.1.0.1.0.1" expl="apply premises" proved="true">
        <proof prover="2"><result status="valid" time="0.27"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC interp_instruction.80.0.1.0.1.1" expl="apply premises" proved="true">
       <proof prover="2"><result status="valid" time="0.33"/></proof>
       </goal>
       <goal name="VC interp_instruction.80.0.1.0.1.2" expl="apply premises" proved="true">
       <proof prover="2"><result status="valid" time="0.17"/></proof>
       </goal>
       <goal name="VC interp_instruction.80.0.1.0.1.3" expl="apply premises" proved="true">
       <proof prover="2"><result status="valid" time="0.25"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC interp_instruction.80.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="2"><result status="valid" time="0.40"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC interp_instruction.80.0.2" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.31"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC interp_instruction.81" expl="exceptional postcondition" proved="true">
  <transf name="subst_all" proved="true" >
   <goal name="VC interp_instruction.81.0" expl="exceptional postcondition" proved="true">
   <transf name="apply" proved="true" arg1="eval_foreach" arg2="with" arg3="(context sta),(state sta3),ss,(contents (result sta))">
    <goal name="VC interp_instruction.81.0.0" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.12"/></proof>
    </goal>
    <goal name="VC interp_instruction.81.0.1" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="ss" arg2="(take i ss ++ Cons (nth i ss) (drop (i+1) ss))">
     <goal name="VC interp_instruction.81.0.1.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="eval_foreach_concat" arg2="with" arg3="last_result,(context sta2),(state sta2)">
      <goal name="VC interp_instruction.81.0.1.0.0" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="0.23"/></proof>
      </goal>
      <goal name="VC interp_instruction.81.0.1.0.1" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="eval_foreach_abort" arg2="with" arg3="(nth i ss),(drop (i + 1) ss)">
       <goal name="VC interp_instruction.81.0.1.0.1.0" expl="apply premises" proved="true">
       <transf name="assert" proved="true" arg1="(sta2.context.var_env1[x3 &lt;- nth i ss]&#39;=sta1.var_env.contents)">
        <goal name="VC interp_instruction.81.0.1.0.1.0.0" expl="asserted formula" proved="true">
        <proof prover="2"><result status="valid" time="0.21"/></proof>
        </goal>
        <goal name="VC interp_instruction.81.0.1.0.1.0.1" expl="apply premises" proved="true">
        <proof prover="2"><result status="valid" time="0.26"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC interp_instruction.81.0.1.0.1.1" expl="apply premises" proved="true">
       <proof prover="2"><result status="valid" time="0.22"/></proof>
       </goal>
       <goal name="VC interp_instruction.81.0.1.0.1.2" expl="apply premises" proved="true">
       <proof prover="2"><result status="valid" time="0.16"/></proof>
       </goal>
       <goal name="VC interp_instruction.81.0.1.0.1.3" expl="apply premises" proved="true">
       <proof prover="2"><result status="valid" time="0.25"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC interp_instruction.81.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="2"><result status="valid" time="0.49"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC interp_instruction.81.0.2" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.31"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC interp_instruction.82" expl="unreachable point" proved="true">
  <proof prover="1"><result status="valid" time="0.14" steps="36"/></proof>
  </goal>
  <goal name="VC interp_instruction.83" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.45"/></proof>
  </goal>
  <goal name="VC interp_instruction.84" expl="VC for interp_instruction" proved="true">
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="VC interp_instruction.85" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.35"/></proof>
  </goal>
  <goal name="VC interp_instruction.86" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.25"/></proof>
  </goal>
  <goal name="VC interp_instruction.87" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.11"/></proof>
  </goal>
  <goal name="VC interp_instruction.88" expl="exceptional postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="H1" arg2="(state sta),(context sta),last_result,BFailure">
   <goal name="VC interp_instruction.88.0" expl="exceptional postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.19"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC interp_instruction.89" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="VC interp_instruction.90" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.19"/></proof>
  </goal>
  <goal name="VC interp_instruction.91" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.48" steps="396"/></proof>
  </goal>
  <goal name="VC interp_instruction.92" expl="exceptional postcondition" proved="true">
  <transf name="subst_all" proved="true" >
   <goal name="VC interp_instruction.92.0" expl="exceptional postcondition" proved="true">
   <transf name="apply" proved="true" arg1="eval_while_abort" arg2="with" arg3="last_result">
    <goal name="VC interp_instruction.92.0.0" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.10"/></proof>
    </goal>
    <goal name="VC interp_instruction.92.0.1" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.47"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC interp_instruction.93" expl="exceptional postcondition" proved="true">
  <transf name="subst_all" proved="true" >
   <goal name="VC interp_instruction.93.0" expl="exceptional postcondition" proved="true">
   <transf name="apply" proved="true" arg1="eval_while_abort" arg2="with" arg3="last_result">
    <goal name="VC interp_instruction.93.0.0" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.20"/></proof>
    </goal>
    <goal name="VC interp_instruction.93.0.1" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.53"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC interp_instruction.94" expl="exceptional postcondition" proved="true">
  <transf name="subst_all" proved="true" >
   <goal name="VC interp_instruction.94.0" expl="exceptional postcondition" proved="true">
   <transf name="apply" proved="true" arg1="eval_while_abort" arg2="with" arg3="last_result">
    <goal name="VC interp_instruction.94.0.0" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="0.03"/></proof>
    <proof prover="1"><result status="valid" time="0.09" steps="33"/></proof>
    <proof prover="2"><result status="valid" time="0.28"/></proof>
    </goal>
    <goal name="VC interp_instruction.94.0.1" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.40"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC interp_instruction.95" expl="postcondition" proved="true">
  <proof prover="0" timelimit="20" memlimit="2500"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="VC interp_instruction.96" expl="exceptional postcondition" proved="true">
  <transf name="subst_all" proved="true" >
   <goal name="VC interp_instruction.96.0" expl="exceptional postcondition" proved="true">
   <transf name="apply" proved="true" arg1="eval_while_abort" arg2="with" arg3="last_result">
    <goal name="VC interp_instruction.96.0.0" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="0.03"/></proof>
    <proof prover="1"><result status="valid" time="0.09" steps="26"/></proof>
    <proof prover="2"><result status="valid" time="0.17"/></proof>
    </goal>
    <goal name="VC interp_instruction.96.0.1" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.35"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC interp_instruction.97" expl="exceptional postcondition" proved="true">
  <transf name="subst_all" proved="true" >
   <goal name="VC interp_instruction.97.0" expl="exceptional postcondition" proved="true">
   <transf name="apply" proved="true" arg1="eval_while_abort" arg2="with" arg3="last_result">
    <goal name="VC interp_instruction.97.0.0" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="0.02"/></proof>
    <proof prover="1"><result status="valid" time="0.10" steps="26"/></proof>
    <proof prover="2"><result status="valid" time="0.26"/></proof>
    </goal>
    <goal name="VC interp_instruction.97.0.1" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.31"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC interp_instruction.98" expl="exceptional postcondition" proved="true">
  <transf name="subst_all" proved="true" >
   <goal name="VC interp_instruction.98.0" expl="exceptional postcondition" proved="true">
   <transf name="apply" proved="true" arg1="eval_while_abort" arg2="with" arg3="last_result">
    <goal name="VC interp_instruction.98.0.0" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="0.03"/></proof>
    <proof prover="1"><result status="valid" time="0.08" steps="26"/></proof>
    <proof prover="2"><result status="valid" time="0.22"/></proof>
    </goal>
    <goal name="VC interp_instruction.98.0.1" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.33"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC interp_str_expr" expl="VC for interp_str_expr" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC interp_str_expr.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="VC interp_str_expr.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.21"/></proof>
  </goal>
  <goal name="VC interp_str_expr.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="VC interp_str_expr.3" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.30"/></proof>
  </goal>
  <goal name="VC interp_str_expr.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.35"/></proof>
  </goal>
  <goal name="VC interp_str_expr.5" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="VC interp_str_expr.6" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.27"/></proof>
  </goal>
  <goal name="VC interp_str_expr.7" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.38"/></proof>
  </goal>
  <goal name="VC interp_str_expr.8" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.47"/></proof>
  </goal>
  <goal name="VC interp_str_expr.9" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.29"/></proof>
  </goal>
  <goal name="VC interp_str_expr.10" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.39"/></proof>
  </goal>
  <goal name="VC interp_str_expr.11" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.30"/></proof>
  </goal>
  <goal name="VC interp_str_expr.12" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.34"/></proof>
  </goal>
  <goal name="VC interp_str_expr.13" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.33"/></proof>
  </goal>
  <goal name="VC interp_str_expr.14" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.22"/></proof>
  </goal>
  <goal name="VC interp_str_expr.15" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.28"/></proof>
  </goal>
  <goal name="VC interp_str_expr.16" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.24"/></proof>
  </goal>
  <goal name="VC interp_str_expr.17" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.26"/></proof>
  </goal>
  <goal name="VC interp_str_expr.18" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="VC interp_str_expr.19" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC interp_list_expr" expl="VC for interp_list_expr" proved="true">
 <proof prover="2"><result status="valid" time="0.24"/></proof>
 </goal>
 <goal name="VC interp_program" expl="VC for interp_program" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC interp_program.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.36"/></proof>
  </goal>
  <goal name="VC interp_program.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.35"/></proof>
  </goal>
  <goal name="VC interp_program.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.31"/></proof>
  </goal>
  <goal name="VC interp_program.3" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.23"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
